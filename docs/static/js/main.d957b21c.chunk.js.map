{"version":3,"sources":["Componentes/AddCategory.jsx","helpers/getGifs.jsx","Componentes/GifGridItem.jsx","Componentes/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","estado","setEstado","useEffect","then","imagen","setTimeout","useFetchGif","console","log","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAiCeA,EA9BK,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,cAAgBC,EAAgB,EAAhBA,WAAgB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAelD,OAEM,sBAAMC,SAbO,SAACC,GACfA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BT,EAAc,CACVG,GADS,mBAENF,KAEJG,EAAc,MAMpB,SACE,uBACQM,KAAK,OACLC,MAAOR,EACPS,SAAU,SAACN,GAAD,OAAKF,EAAcE,EAAEO,OAAOF,a,+BCtB7CG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAVrB,kBAaZM,GAbY,4CAAH,sDCULO,EAVK,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAE5B,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCwBDO,EA1BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAN,SAACA,GAAY,IAAD,EACNb,mBAAS,CACjCoB,KAAK,GACLa,SAAQ,IAHsB,mBAC3BC,EAD2B,KACnBC,EADmB,KAsBlC,OAhBAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAACC,GACHC,YAAW,WAEPJ,EAAU,CACNf,KAAKkB,EACLL,SAAQ,MAEb,WAKZ,CAACpB,IAEGqB,EDpBgBM,CAAY3B,GAA5BoB,EAFqB,EAErBA,QAAQb,EAFa,EAEbA,KAEf,OADAqB,QAAQC,IAAI7B,GAER,qCACI,6BAAKA,IAEDoB,GAAS,cAEb,qBAAKJ,UAAU,YAAf,SAEYT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAGQA,GAFCA,EAAIC,aEK1BmB,EApBM,WAAO,IAAD,EACa3C,mBAAS,CAAC,WADvB,mBAChBD,EADgB,KACJD,EADI,KAGvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBACA,6BAEQA,EAAWuB,KAAI,SAAClB,GAAD,OACX,cAAC,EAAD,CAAiBS,SAAUT,GAAbA,YCRtCwC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d957b21c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories , categories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleSubmit=(e)=>{\r\n         e.preventDefault();\r\n         if(inputValue.trim().length > 2){\r\n             setCategories([\r\n                 inputValue,\r\n                 ...categories\r\n                ]);\r\n                setInputValue('');    \r\n            }\r\n        \r\n    }\r\n    return (\r\n        \r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={(e)=>setInputValue(e.target.value)}\r\n                />    \r\n                {/* <button>Agregar</button> */}\r\n          </form> \r\n          \r\n        \r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired,\r\n    categories:PropTypes.array.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category)=>{\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=bsOAiui5tESigETLib76gJtlDLdvaceT`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ( {id,title,url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n    const {loading,data} = useFetchGif(category);\r\n    console.log(category)\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {\r\n                loading&&'cargando...'\r\n            }\r\n            <div className=\"card_grid\">\r\n                    {\r\n                        data.map( img=>(\r\n                            <GifGridItem \r\n                                key={img.id}            \r\n                                // img={img}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\n\r\nexport const useFetchGif =(category)=>{\r\n    const [estado, setEstado] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then((imagen)=>{\r\n                setTimeout(() => {\r\n                    \r\n                    setEstado({\r\n                        data:imagen,\r\n                        loading:false\r\n                    }) \r\n                }, 2500);\r\n                \r\n                \r\n            })\r\n        \r\n    }, [category])\r\n    \r\n    return estado;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './Componentes/AddCategory'\r\nimport GifGrid from './Componentes/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['batman'])\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} categories={categories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map((e)=>\r\n                        <GifGrid key={e} category={e}></GifGrid>\r\n                    )\r\n                }\r\n                \r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from '../src/GifExpertApp'\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    // <App />,\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}